Known Bugs:
itemManager.createItem(' ') or itemManager.createItem({dataEtc: {data: ' '}}) etc. will create ids that consist only of spaces
itemManager.createItem is programmed to give up looking for unique id after about 10 trillion attempts. Is this too many or too few?
itemManager.createItem is programmed to limit localIds to 64 chars. Is this too many or too few?
itemManager does not deal with foreignIds (i.e. server ids). Can this be taken care of in dataEtc?
when item.setDataEtc() is passed an array, it accepts it, but maybe this is okay?
items have subscribers and publishers ids each stored twice, once in array and once in object to use hash instead of search. Will size matter?
The following test produces an unexpected id, which is 'faith_9_10'
  describe("when item.addPublisherId is called with an invalid id", function () {
    it("ensures item returns false", function() {
      var item = itemManager.createItem({localId: 'faith', publisherIds: ['hope', 'love']});
      var result = item.addPublisherId([]);
It doesn't seem secure: getItem and getItems?
Need a way to export core?
Right now it does console.log when an id is requested but denied because already used or >64chars. Only user will see that if user opens browser console.
  Better to have a log, perhaps item(s) that both user and server/webmaster can have access to?
It's confusing right now that some items seem to be by nature titles. 
  Better to have that be portrayed as it is: part of the presentation status, of which model should be ignorant.
  If we are using its text for a title, call it data or something in model, and call it title in presenter.